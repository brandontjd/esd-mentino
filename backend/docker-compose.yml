version: "3.5"

networks:
    kong-net:
        driver: bridge
        name: kong-net
        
services:
    rabbitmq:
        build:
            context: ./
            dockerfile: Dockerfile-rabbitmq
        image: esd-rabbitmq:3.6
        container_name: rabbitmq_container
        networks:
            - kong-net
        ports:
            - "5672:5672"

    kong:
        build:
            context: ./
            args:
                JWT_SECRET: ${JWT_SECRET}
                JWT_KEY: ${JWT_KEY}
            dockerfile: Dockerfile-kongnodb
        image: kong_nodb:1.0
        container_name: kong_nodb
        networks:
            - kong-net
        environment:
            KONG_DATABASE: "off"
            KONG_DECLARATIVE_CONFIG: kong.yml
            KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
            KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
        ports:
            - "8000:8000/tcp"
            - "8001:8001/tcp"
            - "8443:8443/tcp"
            - "8444:8444/tcp"
            
    mysqldb:
        image: mysql:8.0
        container_name: mysql_container
        volumes:
            - ./mysql-init-files:/docker-entrypoint-initdb.d
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        networks:
            - kong-net
        ports:
            - "3600:3306"
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
    
    user:
        build:
            context: ./User
        environment:
            PYTHON_ENV: PROD
            dbURL: "mysql+mysqlconnector://${MYSQL_USER}:${MYSQL_PASSWORD}@mysqldb:3306/${MYSQL_DATABASE}"
            JWT_SECRET: ${JWT_SECRET}
            JWT_KEY: ${JWT_KEY}
        image: user:1.0
        container_name: user_container
        networks:
            - kong-net
        depends_on:
            - mysqldb
    
    activity-log:
        build:
            context: ./ActivityLog
        environment:
            RABBITMQ_HOSTNAME: "rabbitmq"
            RABBITMQ_PORT: "5672"
            LOGDNA_INGESTION: ${LOGDNA_INGESTION}
        image: activity-log:1.0
        container_name: activity_log_container
        networks:
            - kong-net
        depends_on:
            - rabbitmq
        restart: always

    protected-endpoint:
        build:
            context: ./boilerplate-protected-endpoint
        environment:
            PYTHON_ENV: PROD
            RABBITMQ_HOSTNAME: "rabbitmq"
            RABBITMQ_PORT: "5672"
        image: protected-endpoint:1.0
        container_name: protected_endpoint_container
        networks:
            - kong-net
        depends_on:
            - rabbitmq
        restart: always