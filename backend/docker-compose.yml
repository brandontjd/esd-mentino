version: "3.5"

networks:
    kong-net:
        driver: bridge
        name: kong-net
        
services:
    kong:
        build:
            context: ./
            args:
                JWT_SECRET: ${JWT_SECRET}
                JWT_KEY: ${JWT_KEY}
            dockerfile: Dockerfile-kongnodb
        image: kong_nodb:1.0
        container_name: kong_nodb
        networks:
            - kong-net
        environment:
            KONG_DATABASE: "off"
            KONG_DECLARATIVE_CONFIG: kong.yml
            KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
            KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
        ports:
            - "8000:8000/tcp"
            - "8001:8001/tcp"
            - "8443:8443/tcp"
            - "8444:8444/tcp"
            
    mysqldb:
        image: mysql:8.0
        container_name: mysql_container
        volumes:
            - ./mysql-init-files:/docker-entrypoint-initdb.d
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: esd_db
            MYSQL_USER: esd_user
            MYSQL_PASSWORD: esd_user
        networks:
            - kong-net
        ports:
            - "3600:3306"
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
 
    user:
        build:
            context: ./user
        environment:
            PYTHON_ENV: PROD
            dbURL: "mysql+mysqlconnector://esd_user:esd_user@mysqldb:3306/esd_db"
            JWT_SECRET: ${JWT_SECRET}
            JWT_KEY: ${JWT_KEY}
        image: user:1.0
        container_name: user_container
        networks:
            - kong-net
        depends_on:
            - mysqldb

    protected-endpoint:
        build:
            context: ./boilerplate-protected-endpoint
        environment:
            PYTHON_ENV: PROD
        image: protected-endpoint:1.0
        container_name: protected_endpoint_container
        networks:
            - kong-net